//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BusinessLogicLayer.ItemIocalhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ItemServiceSoap", Namespace="http://ItemService.org/")]
    public partial class ItemService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExisItemNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditItemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ItemService() {
            this.Url = global::BusinessLogicLayer.Properties.Settings.Default.BusinessLogicLayer_ItemIocalhost_ItemService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListItemCompletedEventHandler GetListItemCompleted;
        
        /// <remarks/>
        public event AddItemCompletedEventHandler AddItemCompleted;
        
        /// <remarks/>
        public event ExisItemNameCompletedEventHandler ExisItemNameCompleted;
        
        /// <remarks/>
        public event EditItemCompletedEventHandler EditItemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ItemService.org/GetListItem", RequestNamespace="http://ItemService.org/", ResponseNamespace="http://ItemService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ItemDTO[] GetListItem() {
            object[] results = this.Invoke("GetListItem", new object[0]);
            return ((ItemDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListItemAsync() {
            this.GetListItemAsync(null);
        }
        
        /// <remarks/>
        public void GetListItemAsync(object userState) {
            if ((this.GetListItemOperationCompleted == null)) {
                this.GetListItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListItemOperationCompleted);
            }
            this.InvokeAsync("GetListItem", new object[0], this.GetListItemOperationCompleted, userState);
        }
        
        private void OnGetListItemOperationCompleted(object arg) {
            if ((this.GetListItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListItemCompleted(this, new GetListItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ItemService.org/AddItem", RequestNamespace="http://ItemService.org/", ResponseNamespace="http://ItemService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddItem(ItemDTO pItemDTO) {
            object[] results = this.Invoke("AddItem", new object[] {
                        pItemDTO});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemAsync(ItemDTO pItemDTO) {
            this.AddItemAsync(pItemDTO, null);
        }
        
        /// <remarks/>
        public void AddItemAsync(ItemDTO pItemDTO, object userState) {
            if ((this.AddItemOperationCompleted == null)) {
                this.AddItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemOperationCompleted);
            }
            this.InvokeAsync("AddItem", new object[] {
                        pItemDTO}, this.AddItemOperationCompleted, userState);
        }
        
        private void OnAddItemOperationCompleted(object arg) {
            if ((this.AddItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemCompleted(this, new AddItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ItemService.org/ExisItemName", RequestNamespace="http://ItemService.org/", ResponseNamespace="http://ItemService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExisItemName(string pItemName, int pItemID) {
            object[] results = this.Invoke("ExisItemName", new object[] {
                        pItemName,
                        pItemID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExisItemNameAsync(string pItemName, int pItemID) {
            this.ExisItemNameAsync(pItemName, pItemID, null);
        }
        
        /// <remarks/>
        public void ExisItemNameAsync(string pItemName, int pItemID, object userState) {
            if ((this.ExisItemNameOperationCompleted == null)) {
                this.ExisItemNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExisItemNameOperationCompleted);
            }
            this.InvokeAsync("ExisItemName", new object[] {
                        pItemName,
                        pItemID}, this.ExisItemNameOperationCompleted, userState);
        }
        
        private void OnExisItemNameOperationCompleted(object arg) {
            if ((this.ExisItemNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExisItemNameCompleted(this, new ExisItemNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ItemService.org/EditItem", RequestNamespace="http://ItemService.org/", ResponseNamespace="http://ItemService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditItem(ItemDTO pItemDTO) {
            object[] results = this.Invoke("EditItem", new object[] {
                        pItemDTO});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditItemAsync(ItemDTO pItemDTO) {
            this.EditItemAsync(pItemDTO, null);
        }
        
        /// <remarks/>
        public void EditItemAsync(ItemDTO pItemDTO, object userState) {
            if ((this.EditItemOperationCompleted == null)) {
                this.EditItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditItemOperationCompleted);
            }
            this.InvokeAsync("EditItem", new object[] {
                        pItemDTO}, this.EditItemOperationCompleted, userState);
        }
        
        private void OnEditItemOperationCompleted(object arg) {
            if ((this.EditItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditItemCompleted(this, new EditItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ItemService.org/")]
    public partial class ItemDTO {
        
        private int idField;
        
        private string nameField;
        
        private string ramField;
        
        private string pinField;
        
        private string cameraField;
        
        private string cpuField;
        
        private double priceField;
        
        private string imageField;
        
        private int quantityField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Ram {
            get {
                return this.ramField;
            }
            set {
                this.ramField = value;
            }
        }
        
        /// <remarks/>
        public string Pin {
            get {
                return this.pinField;
            }
            set {
                this.pinField = value;
            }
        }
        
        /// <remarks/>
        public string Camera {
            get {
                return this.cameraField;
            }
            set {
                this.cameraField = value;
            }
        }
        
        /// <remarks/>
        public string Cpu {
            get {
                return this.cpuField;
            }
            set {
                this.cpuField = value;
            }
        }
        
        /// <remarks/>
        public double Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetListItemCompletedEventHandler(object sender, GetListItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ItemDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ItemDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void AddItemCompletedEventHandler(object sender, AddItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void ExisItemNameCompletedEventHandler(object sender, ExisItemNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExisItemNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExisItemNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void EditItemCompletedEventHandler(object sender, EditItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591