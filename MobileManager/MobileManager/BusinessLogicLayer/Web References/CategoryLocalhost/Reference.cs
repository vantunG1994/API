//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BusinessLogicLayer.CategoryLocalhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CategoryServiceSoap", Namespace="http://CategoryService.org/")]
    public partial class CategoryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExisCattNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanDeleteCategoryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CategoryService() {
            this.Url = global::BusinessLogicLayer.Properties.Settings.Default.BusinessLogicLayer_CategoryLocalhost_CategoryService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListCategoryCompletedEventHandler GetListCategoryCompleted;
        
        /// <remarks/>
        public event AddCategoryCompletedEventHandler AddCategoryCompleted;
        
        /// <remarks/>
        public event ExisCattNameCompletedEventHandler ExisCattNameCompleted;
        
        /// <remarks/>
        public event EditCategoryCompletedEventHandler EditCategoryCompleted;
        
        /// <remarks/>
        public event CanDeleteCategoryCompletedEventHandler CanDeleteCategoryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CategoryService.org/GetListCategory", RequestNamespace="http://CategoryService.org/", ResponseNamespace="http://CategoryService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryDTO[] GetListCategory() {
            object[] results = this.Invoke("GetListCategory", new object[0]);
            return ((CategoryDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void GetListCategoryAsync() {
            this.GetListCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetListCategoryAsync(object userState) {
            if ((this.GetListCategoryOperationCompleted == null)) {
                this.GetListCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListCategoryOperationCompleted);
            }
            this.InvokeAsync("GetListCategory", new object[0], this.GetListCategoryOperationCompleted, userState);
        }
        
        private void OnGetListCategoryOperationCompleted(object arg) {
            if ((this.GetListCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCategoryCompleted(this, new GetListCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CategoryService.org/AddCategory", RequestNamespace="http://CategoryService.org/", ResponseNamespace="http://CategoryService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCategory(CategoryDTO pCategoryDTO) {
            object[] results = this.Invoke("AddCategory", new object[] {
                        pCategoryDTO});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCategoryAsync(CategoryDTO pCategoryDTO) {
            this.AddCategoryAsync(pCategoryDTO, null);
        }
        
        /// <remarks/>
        public void AddCategoryAsync(CategoryDTO pCategoryDTO, object userState) {
            if ((this.AddCategoryOperationCompleted == null)) {
                this.AddCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCategoryOperationCompleted);
            }
            this.InvokeAsync("AddCategory", new object[] {
                        pCategoryDTO}, this.AddCategoryOperationCompleted, userState);
        }
        
        private void OnAddCategoryOperationCompleted(object arg) {
            if ((this.AddCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCategoryCompleted(this, new AddCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CategoryService.org/ExisCattName", RequestNamespace="http://CategoryService.org/", ResponseNamespace="http://CategoryService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExisCattName(string pCatName, int pCatID) {
            object[] results = this.Invoke("ExisCattName", new object[] {
                        pCatName,
                        pCatID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExisCattNameAsync(string pCatName, int pCatID) {
            this.ExisCattNameAsync(pCatName, pCatID, null);
        }
        
        /// <remarks/>
        public void ExisCattNameAsync(string pCatName, int pCatID, object userState) {
            if ((this.ExisCattNameOperationCompleted == null)) {
                this.ExisCattNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExisCattNameOperationCompleted);
            }
            this.InvokeAsync("ExisCattName", new object[] {
                        pCatName,
                        pCatID}, this.ExisCattNameOperationCompleted, userState);
        }
        
        private void OnExisCattNameOperationCompleted(object arg) {
            if ((this.ExisCattNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExisCattNameCompleted(this, new ExisCattNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CategoryService.org/EditCategory", RequestNamespace="http://CategoryService.org/", ResponseNamespace="http://CategoryService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditCategory(CategoryDTO pCategoryDTO) {
            object[] results = this.Invoke("EditCategory", new object[] {
                        pCategoryDTO});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditCategoryAsync(CategoryDTO pCategoryDTO) {
            this.EditCategoryAsync(pCategoryDTO, null);
        }
        
        /// <remarks/>
        public void EditCategoryAsync(CategoryDTO pCategoryDTO, object userState) {
            if ((this.EditCategoryOperationCompleted == null)) {
                this.EditCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCategoryOperationCompleted);
            }
            this.InvokeAsync("EditCategory", new object[] {
                        pCategoryDTO}, this.EditCategoryOperationCompleted, userState);
        }
        
        private void OnEditCategoryOperationCompleted(object arg) {
            if ((this.EditCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCategoryCompleted(this, new EditCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://CategoryService.org/CanDeleteCategory", RequestNamespace="http://CategoryService.org/", ResponseNamespace="http://CategoryService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanDeleteCategory(int pCatID) {
            object[] results = this.Invoke("CanDeleteCategory", new object[] {
                        pCatID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanDeleteCategoryAsync(int pCatID) {
            this.CanDeleteCategoryAsync(pCatID, null);
        }
        
        /// <remarks/>
        public void CanDeleteCategoryAsync(int pCatID, object userState) {
            if ((this.CanDeleteCategoryOperationCompleted == null)) {
                this.CanDeleteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanDeleteCategoryOperationCompleted);
            }
            this.InvokeAsync("CanDeleteCategory", new object[] {
                        pCatID}, this.CanDeleteCategoryOperationCompleted, userState);
        }
        
        private void OnCanDeleteCategoryOperationCompleted(object arg) {
            if ((this.CanDeleteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanDeleteCategoryCompleted(this, new CanDeleteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://CategoryService.org/")]
    public partial class CategoryDTO {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetListCategoryCompletedEventHandler(object sender, GetListCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void AddCategoryCompletedEventHandler(object sender, AddCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void ExisCattNameCompletedEventHandler(object sender, ExisCattNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExisCattNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExisCattNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void EditCategoryCompletedEventHandler(object sender, EditCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void CanDeleteCategoryCompletedEventHandler(object sender, CanDeleteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanDeleteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanDeleteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591